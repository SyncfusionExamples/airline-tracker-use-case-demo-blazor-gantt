@page "/airline"

@rendermode InteractiveServer
 
@using Syncfusion.Blazor.Gantt
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor

<div>
    <h1 class="py-1 text-center text-center">Airline Tracker</h1>
</div>
<div class="w-100">
<div class="e-switch-control">
                <label class="showhide"> Project View </label>
                <SfSwitch ValueChange="ChangeViewType" @bind-Checked="@check" TChecked="bool"></SfSwitch>
                <label class="showhide"> Resource View </label>
            </div>
<SfGantt @ref="_ganttInstance" ViewType="@viewType" ConnectorLineBackground="#006400" DataSource="@airlineInformations" DurationUnit="DurationUnit.Hour" IncludeWeekend="true" TreeColumnIndex="2" ScrollToTaskbarOnClick="true" Height="450px" Width="100%" RowHeight="40">
    <GanttTaskFields Id="Id" Name="Airline" Dependency="ConnectedFlight" ParentID="ParentId" StartDate="ArrivalTime" EndDate="DepartureTime" Duration="Duration">
    </GanttTaskFields>
    <GanttResource DataSource="resourceCollection" Id="ResourceId" Name="ResourceName" MaxUnits="Unit" TValue="AirlineInfoModel" TResources="ResourceInfoModel"></GanttResource>
    <GanttAssignmentFields DataSource="assignmentCollection" PrimaryKey="PrimaryId" TaskID="TaskId" ResourceID="ResourceId" Units="Unit" TValue="AirlineInfoModel" TAssignment="AssignmentModel"></GanttAssignmentFields>
    <GanttDayWorkingTimeCollection>
        <GanttDayWorkingTime From="0" To="24"></GanttDayWorkingTime>
    </GanttDayWorkingTimeCollection>
    <GanttColumns>
        <GanttColumn Field="Id" Visible="false"></GanttColumn>
        <GanttColumn Field="Flight" Visible="false" ClipMode="ClipMode.EllipsisWithTooltip"></GanttColumn>
        <GanttColumn Field="Airline"></GanttColumn>
        <GanttColumn Field="Status">
            <Template>
                @{
                    var datas = context as AirlineInfoModel;
                    if (datas != null)
                    {
                        string statusStyle = GetStatusContentStyles(datas.Status);
                        if (!string.IsNullOrEmpty(datas.Status))
                        {
                            <div><span class="e-airline-status" style="@statusStyle">@(datas.Status)</span></div>
                        }
                    }
                }
            </Template>
            <EditTemplate>
                @{
                    var datas = context as AirlineInfoModel;
                    if (datas != null)
                    {
                        <SfComboBox TValue="string" TItem="string" PopupHeight="200px" Placeholder="Select status" @bind-Value="@(datas.Status)" DataSource="@status">
                        </SfComboBox>
                    }
                }
            </EditTemplate>
        </GanttColumn>
        <GanttColumn Field="Origin" ClipMode="ClipMode.EllipsisWithTooltip">
            <Template>
                @{
                    var datas = context as AirlineInfoModel;
                    if (datas != null)
                    {
                        <div>@(datas.Origin)</div>
                    }
                }
            </Template>
            <EditTemplate>
                @{
                    var datas = context as AirlineInfoModel;
                    if (datas != null)
                    {
                        <SfComboBox TValue="string" TItem="string" PopupHeight="200px" Placeholder="Select origin" @bind-Value="@(datas.Origin)" DataSource="@places">
                        </SfComboBox>
                    }
                }
            </EditTemplate>
        </GanttColumn>
        <GanttColumn Field="Destination" ClipMode="ClipMode.EllipsisWithTooltip">
            <Template>
                @{
                    var datas = context as AirlineInfoModel;
                    if (datas != null)
                    {
                        <div>@(datas.Destination)</div>
                    }
                }
            </Template>
            <EditTemplate>
                @{
                    var datas = context as AirlineInfoModel;
                    if (datas != null)
                    {
                        <SfComboBox TValue="string" TItem="string" PopupHeight="200px" Placeholder="Select destination" @bind-Value="@(datas.Destination)" DataSource="@places">
                        </SfComboBox>
                    }
                }
            </EditTemplate>
        </GanttColumn>
        <GanttColumn Field="ArrivalTime" EditType="EditType.DateTimePickerEdit" HeaderText="ArrivalTime" ClipMode="ClipMode.EllipsisWithTooltip">
            <Template>
                @{
                    var datas = context as AirlineInfoModel;
                    if (datas is null)
                    {
                        return;
                    }
                    var textColor = datas.Status == "Delay" ? "red" : "#000"; 
                    <span style="color:@textColor">@GetTime(datas.ArrivalTime)</span>
                }
            </Template>
        </GanttColumn>
        <GanttColumn Field="DepartureTime" EditType="EditType.DateTimePickerEdit" HeaderText="DepartureTime" ClipMode="ClipMode.EllipsisWithTooltip">
            <Template>
                @{
                    var datas = context as AirlineInfoModel;
                    if (datas is null)
                    {
                        return;
                    }
                    <span>@GetTime(datas.DepartureTime)</span>
                }
            </Template>
        </GanttColumn>
        <GanttColumn Field="Duration" ClipMode="ClipMode.EllipsisWithTooltip"></GanttColumn>
    </GanttColumns>
    <GanttTimelineSettings>
        <GanttTopTierSettings Unit="TimelineViewMode.Day" Format="MMM dd,yyyy"></GanttTopTierSettings>
        <GanttBottomTierSettings Unit="TimelineViewMode.Hour"></GanttBottomTierSettings>
    </GanttTimelineSettings>
    <GanttLabelSettings TValue="AirlineInfoModel">
        <LeftLabelTemplate>
            @{
                var datas = context as AirlineInfoModel;
                <div>
                    <span>@datas.Flight - @datas.Status</span>
                </div>
            }
        </LeftLabelTemplate>
    </GanttLabelSettings>
    <GanttTooltipSettings TValue="AirlineInfoModel">
        <TaskbarTemplate>
            @{
                var datas = context as AirlineInfoModel;
                <div>
                    <div class="text-center p-2">
                        <i class="fa fa-plane" style="font-size:40px;color:#fff"></i>
                    </div>
                    <table class="table table-borderless table-hover table-primary " style="color:#FFFFFF">
                        @if (!string.IsNullOrEmpty(datas.Flight))
                        {
                            <tr>
                                <td>Flight Number</td>
                                <td>: @datas.Flight</td>
                            </tr>
                        }
                        @if (!string.IsNullOrEmpty(datas.Status))
                        {
                            <tr>
                                <td>Status</td>
                                <td>: @datas.Status</td>
                            </tr>
                        }
                        <tr>
                            <td>Arrival Time</td>
                            <td>: @datas.ArrivalTime</td>
                        </tr>
                        <tr>
                            <td>Departure Time</td>
                            <td>: @datas.DepartureTime</td>
                        </tr>
                    </table>
                </div>
            }
        </TaskbarTemplate>
    </GanttTooltipSettings>
    <GanttTemplates TValue="AirlineInfoModel">
        <TaskbarTemplate>
            @{
                var task = (context as AirlineInfoModel);    
                if(task == null)
                {
                    return;
                }
                var taskModel = GetTaskData(task);
                SetBackgroundColor(task);
                var content = GetTaskbarContent(task);
                string className = string.Empty;
                if (task.Status == "Scheduled")
                {
                    className = "e-gantt-schedule-taskbar";   
                }
                <div class="e-gantt-child-taskbar e-gantt-child-taskbar-inner-div" style="height:24px;background:@color !important; outline: 1px solid @progressColor;" tabindex=-1>
                   <div class="e-gantt-taskbar-template">
                        <div class="e-gantt-taskbar-template-inner-div">
                            <i class="fa fa-plane" style="font-size:20px;color:#fff"></i>
                        </div>
                        <div class="e-gantt-taskbar-template-inner-div e-gantt-child-taskbar-content @className">
                            @content
                        </div>
                    </div> 
                </div>
            }
        </TaskbarTemplate>
        <ParentTaskbarTemplate>
            @{
                var task = (context as AirlineInfoModel);
                if (task == null)
                {
                    return;
                }
                <div class="e-gantt-parent-taskbar-inner-div e-gantt-parent-taskbar e-gantt-parent-taskbar-div" tabindex=-1>
                    <i class="fa fa-plane" style="font-size:20px;color:#000"></i>
                @task.Airline
                </div>
            }
        </ParentTaskbarTemplate> 
    </GanttTemplates>
</SfGantt>
</div>

 